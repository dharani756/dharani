class Stack{
   int []stackArray;
   int capacity;
   int top;
 public Stack(int size){
 stackArray=new int[size];
 capacity=size;
 top=-1;
}
public void push(int value){
 if(isFull()){
   System.out.println("overflow");
 return;
}
stackArray[++top]=value;
System.out.println(value);
}
public int pop(){
if(isEmpty()){
System.out.println("underflow");
return -1;
}
return stackArray[top--];
}
public int peek(){
if(isEmpty()){
System.out.println("underflow");
return -1;
}
return top;
}
 public boolean isEmpty() {
        return top == -1;  
    }
    public boolean isFull() {
        return top == capacity - 1; 
    }
public static void main(String[]args){
Stack s=new Stack(5);
s.push(10);
s.push(20);
s.push(30);
s.push(40);
while(!s.isEmpty()){
System.out.println(s.peek());
System.out.println(s.pop());
}
}
}
